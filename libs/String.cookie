(* String of Punctuations *)
let punctuation = "!#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~"
in
let lowercase = "abcdefghipqrstuvwxyz"
in
let uppercase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
in

(* index of occurence of substring *)
fun strcmp_recursive with str1, str2, start, total_compare, curr_length =
  if total_compare = 0 then 1 else
  if (str1 start) = (str2 curr_length) then
    (String.strcmp_recursive str1 str2 start+1 total_compare-1 curr_length+1)
  else -1.0
in
fun strstr_recursive with str1, str2, start, total_length =
  if start > total_length then -1.0 else
  let str2_len = (len str2) in
  if (String.strcmp_recursive str1 str2 start str2_len 0) = 1 then
    start else
    (String.strstr_recursive str1 str2 start+1 total_length)
in
fun strstr with str1, str2 =
  let str1_len = (len str1) in
  let str2_len = (len str2) in
  if str1_len < str2_len then
    -1.0 else
    (String.strstr_recursive str1 str2 0 str1_len-str2_len)
in

(* return array of delimited string *)
fun strsplit_recursive with str1, str2, start, str_so_far =
  if start >= (len str1) then str_so_far else
  if (str1 start) = str2 then
    str_so_far else
    let new_str = str_so_far + (str1 start) in
    (String.strsplit_recursive str1 str2 start+1 new_str)
in
fun strtok_recursive with str1, str2, total_len, arr =
  let split = (strsplit_recursive str1 str2 total_len "") in
  if split = "" then arr else
    let new_arr = arr + split in
    (strtok_recursive str1 str2 total_len+(len split)+1 new_arr)
in
fun strtok with str1, str2 =
  let arr = [] in
  (strtok_recursive str1 str2 0 arr)
in

(* Reverse string *)
fun reverse_helper with str, i =
    if i = 0 then (str i)
    else (str i) + (String.reverse_helper str i - 1)
in
fun reverse with str =
    (String.reverse_helper str (len str) - 1)
in

(* return substring *)
fun substr_helper with str, i, j, k =
    if k < i then (String.substr_helper str i j k + 1)
    else
        if k < j - 1 then (str k) + (String.substr_helper str i j k + 1) 
        else (str k)
in
fun substr2 with str, i, j =
    (String.substr_helper str i j 0)
in
fun substr1 with str, i =
    (String.substr_helper str i (len str) 0)
in
0
